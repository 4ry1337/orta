syntax = "proto3";

package article;

import "google/protobuf/timestamp.proto";

import "common.proto";

message SearchRequest {
  optional string query = 1;
  int64 limit = 2;
  optional string cursor = 3;
  optional string by_user = 4; 
}

message GetRequest {
  string article_id = 1;
  optional string by_user = 2; 
}

message CreateRequest {
  string user_id = 1;
  string title = 2;
  optional string description = 3;
}

message UpdateRequest {
  string user_id = 1;
  string article_id = 2;
  optional string title = 3;
  optional string description = 4;
}

message DeleteRequest {
  string user_id = 1;
  string article_id = 2;
}

message AddAuthorRequest {
  string user_id = 1;
  string article_id = 2;
  string author_id = 3;
}

message RemoveAuthorRequest {
  string user_id = 1;
  string article_id = 2;
  string author_id = 3;
}

message LikeRequest {
  string user_id = 1;
  string article_id = 2;
}

message UnlikeRequest {
  string user_id = 1;
  string article_id = 2;
}

message PublishRequest {
  string user_id = 1;
  string article_id = 2;
}

message HistoryRequest {
  string user_id = 1;
  string article_id = 2;
  optional string query = 3;
  optional string cursor = 4;
  int64 limit = 5;
}

message VersionRequest {
  string user_id = 1;
  string article_id = 2;
}

message EditRequest {
  string user_id = 1;
  string article_id = 2;
  string content = 3;
  optional string device_id = 4;
}

message SetTagsRequest {
  string user_id = 1;
  string article_id = 2;
  repeated string tags = 3;
}

service ArticleService {
  rpc Search(SearchRequest) returns (common.FullArticles);
  rpc Get(GetRequest) returns (common.FullArticle);
  rpc Create(CreateRequest) returns (common.Article);
  rpc Update(UpdateRequest) returns(common.Article);
  rpc Delete(DeleteRequest) returns (common.MessageResponse);
  rpc Like(LikeRequest) returns (common.MessageResponse);
  rpc Unlike(UnlikeRequest) returns (common.MessageResponse);
  rpc Publish(PublishRequest) returns (common.MessageResponse);
  rpc AddAuthor(AddAuthorRequest) returns (common.MessageResponse);
  rpc RemoveAuthor(RemoveAuthorRequest) returns (common.MessageResponse);
  rpc History(HistoryRequest) returns (common.ArticleVersions);
  rpc Version(VersionRequest) returns (common.ArticleVersion);
  rpc Edit(EditRequest) returns (common.ArticleVersion);
  rpc SetTags(SetTagsRequest) returns (common.MessageResponse);
}
